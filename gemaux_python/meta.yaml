{% set version = tag + '_' + DATE %}

about:
    home: http://www.gemini.edu/sciops/data-and-results/processing-software
    license: BSD
    summary: The "gemaux" Python package, for internal Gemini operations
build:
    binary_relocation: True
    number: '0'
    script: $PYTHON setup.py install
package:
    name: gemaux_python
    version: {{ version }}
source:
    fn: gemaux_python-{{ version }}.tar.gz
    url: http://astroconda-source:4440/gemaux_python-{{ version }}.tar.gz
requirements:
    # Most of the dependencies besides python are not actually needed to
    # "build" gemaux_python, but including them here ensures that they get
    # built and therefore that the package is installable.
    build:
    - python
    - astropy >=4
    - dragons =={{ version }}        # require same tag & checkout day?
    - flask >=1.1                    # just fire
    - matplotlib >=1.4.2
    - numpy >=1.19                   # earlier vers prob. OK but not re-tested
    - pyds9 >=1.8.1
    # - pyraf >=2.1.6
    - python-dateutil >=2.5.3
    - requests >=2.23                # just archive_access & fire
    # - rx >=3.1                     # just fire; but not in Anaconda repos!
    - scipy >=1.3
    - scikit-image >=0.10.1
    # Some of these modules are only used in one or two scripts, but all except
    # flask, pyds9 & rx are indirect dependencies via dragons anyway.
    run:
    - python
    - astropy >=4
    - dragons =={{ version }}        # require same tag & checkout day?
    - flask >=1.1                    # just fire
    - matplotlib >=1.4.2             # just cleanir.py
    - numpy >=1.19                   # earlier vers prob. OK but not re-tested
    - pyds9 >=1.8.1                  # just gsfpos/goipos
    # - pyraf >=2.1.6                # just cleanir.py; avoid IRAF dep on Py 3
    - python-dateutil >=2.5.3
    - requests >=2.23                # just archive_access & fire
    # - rx >=3.1                     # just fire; but not in Anaconda repos!
    - scipy >=1.3
    - scikit-image >=0.10.1          # just create_illum_mask.py
